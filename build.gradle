buildscript {
    repositories {
        maven { url = 'https://maven.fabricmc.net/' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.fabricmc:fabric-loom:1.11.7'
    }
}

apply plugin: 'fabric-loom'
apply plugin: 'maven-publish'

group = 'com.leefy'
version = '1.1.0'

repositories {
    mavenCentral()
    maven { url = 'https://maven.fabricmc.net/' }
    maven { url = 'https://maven.terraformersmc.com/releases/' }
    maven { url = 'https://maven.shedaniel.me/' }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_api_version}"
    
    // Mod menu and Cloth Config API
    modImplementation "com.terraformersmc:modmenu:11.0.1"
    modApi("me.shedaniel.cloth:cloth-config-fabric:15.0.127") {
        exclude(group: "net.fabricmc.fabric-api")
    }
}

loom {
    splitEnvironmentSourceSets()
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
        vendor = JvmVendorSpec.ADOPTIUM
    }
    withSourcesJar()
}

// Ensure Gradle uses the toolchain
tasks.withType(JavaCompile).configureEach {
    javaCompiler = javaToolchains.compilerFor {
        languageVersion = JavaLanguageVersion.of(21)
        vendor = JvmVendorSpec.ADOPTIUM
    }
}

tasks.withType(Javadoc).configureEach {
    javadocTool = javaToolchains.javadocToolFor {
        languageVersion = JavaLanguageVersion.of(21)
        vendor = JvmVendorSpec.ADOPTIUM
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact(remapJar) { builtBy remapJar }
            artifact(remapSourcesJar) { builtBy remapSourcesJar }
        }
    }
}
